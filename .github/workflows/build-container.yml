---

name: Build Container

on: 
  push: 
    branches: 
      - main
      - master


jobs:
  DiscordCardLinker: 
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Build new image
        run: |
          echo "awscli: $(which aws)"
          echo "docker: $(which docker)"
          echo "pip3..: $(which pip3)"
          echo "Installing latest awscli"
          sudo pip3 install aws-cli
          echo "awscli: $(which aws)"
          #echo "Installing Docker"
          #sudo apt-get update ; sudo apt-get install -y docker.io ; true
          #echo "docker: $(which docker)"
          echo "Logging in to ECR"
          eval "$(aws ecr get-login --no-include-email --region us-east-2)"
          echo "Building DiscordCardLinker"
          cd DiscordCardLinker
          docker build --force-rm=true --no-cache \
            -t discordcardlinker:latest \
            -t 230787692442.dkr.ecr.us-east-2.amazonaws.com/discordcardlinker:latest \
            -f Dockerfile .
          if [ $? == 0 ]; then
            echo "Pushing Image to ECR"
            docker push 230787692442.dkr.ecr.us-east-2.amazonaws.com/discordcardlinker:latest
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}


      - name: Deploy latest image
        run: |
          echo "todo"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}




